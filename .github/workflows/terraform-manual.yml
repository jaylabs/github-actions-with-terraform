name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      options:
        type: choice
        description: 'This action will destroy everything. Are you sure?'
        options: 
        - 'NO'
        - 'YES'

jobs:
  # This workflow contains a single job called "greet"
  approval:
    # The type of runner that the job will run on
    name: 'Approval'
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Approval
      run: if [ "${{ github.event.inputs.options }}" = "NO" ] ; then echo -e "NOT APPROVED" && exit 1; fi
      
  terraform-apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: [approval]    

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
